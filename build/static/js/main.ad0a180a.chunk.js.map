{"version":3,"sources":["logo.svg","components/Home.js","components/About.js","images/theatre.png","components/Header.js","components/FavoriteItem.js","components/Favorites.js","components/PlayFilters.js","components/Heart.js","components/SinglePlay.js","images/loading.gif","components/PlayList.js","components/PlayBrowser.js","images/wikipedia.jpg","images/gutenberg.jpg","images/shakespeare.jpg","components/PlayDetails.js","components/Characters.js","components/Tabs.js","components/DetailsMain.js","components/TextForm.js","components/Scene.js","components/ScriptText.js","components/DetailsText.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","className","id","type","name","defaultValue","filterTitle","onChange","e","updateTitleFilter","target","value","to","onClick","saveFilters","undefined","href","About","title","onRequestClose","Modal","setAppElement","document","getElementById","Header","React","useState","isOpen","setIsOpen","setModal","handleClick","src","icon","height","alt","contentLabel","FavoriteItem","updateCurrentPlay","play","updateInfo","info","fetchInfo","updateFavorites","xmlns","viewBox","width","fill","d","Favorites","TransitionGroup","favorites","map","p","CSSTransition","timeout","classNames","favoriteCollapse","setFavoriteCollapse","PlayFilters","clicked","setClicked","beforeInput","setBefore","afterInput","setAfter","genre","setGenre","bText","setBText","filterGenres","genres","plays","filter","item","index","indexOf","handleGenreChange","handleBeforeChange","handleAfterChange","onSubmit","preventDefault","resultStatus","moreFilters","Heart","heartSolid","heartOutline","favoriteStatus","updateHeartClassName","find","SinglePlay","heartStyle","setHeartStyle","handleView","likelyDate","PlayList","defaultHeading","heading","titleHeading","setTitleHeading","dateHeading","setDateHeading","clickedTitle","setClickedTitle","clickedDate","setClickedDate","arrowUp","arrowDown","loadedDataStatus","loadingAnimation","sortPlays","PlayBrowser","PlayDetails","wiki","wikipedia","gutenberg","shakespeareOrg","desc","Characters","chars","player","DisplayPosts","fileExists","defaultIndex","DetailsMain","synopsis","toggleReadText","TextForm","handleActChange","text","n","handleSceneChange","actForm","t","scenes","handleCharacterChange","updateSearch","Scene","findHighLight","speech","scene","searchWords","playSearchWord","autoEscape","textToHighlight","lines","act","s","sceneForm","stageDirection","speeches","speaker","characterForm","ScriptText","acts","actName","DetailsText","setActForm","setSceneForm","setCharacterForm","setPlaySearchWord","Details","loadedDetailsStatus","setLoadedDetailsStatus","useEffect","filename","updateFileExists","substring","lastIndexOf","fetch","then","resp","json","data","updateText","updateChars","persona","key","saved","localStorage","getItem","initial","JSON","parse","setItem","stringify","getStoredPlayDetails","short","console","log","readText","App","setLoadedDataStatus","setPlays","filteredPlays","setFilteredPlays","sortedPlays","setSortedPlays","savedFilteredPlays","setSavedFilteredPlays","setFavorites","setFilterTitle","currentPlay","setCurrentPlay","setResultStatus","setInfo","setFileExists","setReadText","setText","setChars","fetchPlay","fav","copyFavs","cloneDeep","favorite","splice","push","catch","err","error","playsCopy","toLowerCase","includes","length","location","useLocation","path","element","titleSort","dateSort","copySortedPlays","sort","a","b","state","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad0a180a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"../styles/Home.css\";\r\nimport \"../styles/general.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setState, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = (props) => {\r\n  const passFilter = (e) => {\r\n    props.saveFilters(props.filterTitle, undefined, undefined, undefined);\r\n  };\r\n\r\n  const passBlankFilter = () => {\r\n    props.saveFilters(\"\", undefined, undefined, undefined);\r\n    props.updateTitleFilter(\"\");\r\n  };\r\n\r\n  const handleTitleChange = (e) => props.updateTitleFilter(e.target.value);\r\n\r\n  return (\r\n    <section className=\"Home\">\r\n      <div className=\"homeContainer\">\r\n        <legend id=\"legend\">Play Browser</legend>\r\n        <form className=\"homeForm\">\r\n          <label id=\"label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"inputText\"\r\n            defaultValue={props.filterTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n          <Link className=\"showFilteredLink\" to=\"/browse\">\r\n            <button onClick={passFilter} className=\"button showFiltered\">\r\n              Show Matching Plays\r\n            </button>\r\n          </Link>\r\n          <Link className=\"showAllLink\" to=\"/browse\">\r\n            <button onClick={passBlankFilter} className=\"button ShowAll\">\r\n              Show All Plays\r\n            </button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n      <p id=\"heroImg\">\r\n        Photo by{\" \"}\r\n        <a href=\"https://unsplash.com/@hulkiokantabak?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n          Hulki Okan Tabak\r\n        </a>{\" \"}\r\n        on{\" \"}\r\n        <a href=\"https://unsplash.com/s/photos/shakespeare?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n          Unsplash\r\n        </a>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../styles/template.css\";\r\nimport \"../styles/About.css\";\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div className=\"aboutBox\">\r\n      <div className=\"assignInfo\">\r\n        <h1 id=\"assignHead\">Assignment 1</h1>\r\n        <h3 id=\"assignSubHead\">COMP 4513: Randy Connolly</h3>\r\n        <p id=\"assignGroup\">\r\n          Designed by: Hatoon Al-Nakshabandi, Dylan Borchert, and Darren Lam\r\n        </p>\r\n        <a id=\"assignGit\" href=\"https://github.com/dborc610/comp4513-f2021-assign1\">\r\n          github Repo\r\n        </a>\r\n      </div>\r\n      <div className=\"lists\">\r\n        <ul className=\"techUsed\">\r\n          <li className=\"techItem\"><h2 className=\"aboutList\">Tech Used</h2></li>\r\n          <li className=\"techItem\">React-modal</li>\r\n          <li className=\"techItem\">React-router</li>\r\n          <li className=\"techItem\">React-router-DOM</li>\r\n          <li className=\"techItem\">React-tabs</li>\r\n          <li className=\"techItem\">lodash</li>\r\n          <li className=\"techItem\">Style-components</li>\r\n          <li className=\"techItem\">react-highlight-words</li>\r\n        </ul>\r\n        <ul className=\"sources\">\r\n          <li className=\"sourceItem\"><h2 className=\"aboutList\">Sources</h2></li>\r\n          <li className=\"sourceItem\">\r\n            Heart Logos from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://fonts.google.com/icons?selected=Material+Icons+Outlined:assignment_returned&icon.query=heart\"\r\n            >\r\n              Google Icons\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Some button Styling from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://moderncss.dev/css-button-styling-guide/\"\r\n            >\r\n              here\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Icons made by:\r\n            <a target=\"_blank\" href=\"https://www.freepik.com\" title=\"Freepik\">\r\n              Freepik\r\n            </a>\r\n            from\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.flaticon.com/\"\r\n              title=\"Flaticon\"\r\n            >\r\n              www.flaticon.com\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Scroll bar styles from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp\"\r\n            >\r\n              here\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Hosting tutorial from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.youtube.com/watch?v=aUW5GAFhu6s\"\r\n            >\r\n              here\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Loading Animation from\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://monophy.com/gifs/book-page-flip-turn-lMa32EDsr7NrDwg1no\"\r\n            >\r\n              from\r\n            </a>\r\n            React Tabs Implemetation from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.youtube.com/watch?v=tBaBl7gpYhs\"\r\n            >\r\n              here\r\n            </a>\r\n          </li>\r\n          <li className=\"sourceItem\">\r\n            Local storage code setup from:\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://blog.logrocket.com/using-localstorage-react-hooks/\"\r\n            >\r\n              here\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"close\">\r\n        <button\r\n          className=\"buttonSolid buttonThin\"\r\n          onClick={props.onRequestClose}\r\n        >\r\n          Close &#10006;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export default __webpack_public_path__ + \"static/media/theatre.75f92c21.png\";","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"../styles/playbrowser.css\";\r\nimport About from \"./About.js\";\r\nimport \"../styles/About.css\";\r\nimport icon from \"../images/theatre.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nModal.setAppElement(document.getElementById(\"#appHeader\"));\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const setModal = () => setIsOpen(!isOpen);\r\n\r\n  const setShadow = () => {\r\n    if (isOpen) {\r\n      return \"blurbox\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModal();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"header\" id=\"appHeader\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={icon} height=\"50\" alt=\"back to home\" title=\"Back to Home\" />\r\n        </Link>\r\n      </div>\r\n      <div className={setShadow()} onClick={handleClick}></div>\r\n      <button className=\"buttonThin buttonSolid\" onClick={handleClick}>\r\n        About\r\n      </button>\r\n      {isOpen ? (\r\n        <About onRequestClose={setModal} contentLabel=\"About Modal\" />\r\n      ) : null}\r\n    </nav>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/playbrowser.css\";\r\n\r\nconst FavoriteItem = (props) => {\r\n  const handleDelete = () => {\r\n    props.updateFavorites(props.play);\r\n  };\r\n  const handleView = () => {\r\n    props.updateCurrentPlay(props.play);\r\n    props.updateInfo(props.info);\r\n    props.fetchInfo(props.play);\r\n  };\r\n  return (\r\n    <tr className={\"favItem\"}>\r\n      <Link to=\"/details\" className=\"titleLink\" onClick={handleView}>\r\n        <td>{props.play.title}</td>\r\n      </Link>\r\n      <td className=\"trashIcon\">\r\n        <div onClick={handleDelete} className={\"favDelete\"}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"24px\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24px\"\r\n            fill=\"#000000\"\r\n          >\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n            <path d=\"M14.12 10.47L12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\" />\r\n          </svg>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport \"../styles/playbrowser.css\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst Favorites = (props) => {\r\n  const updateFavoriteCollapse = () => {\r\n    if (props.favoriteCollapse === \"expandFavs\") {\r\n      props.setFavoriteCollapse(\"collapseFavs\");\r\n    } else {\r\n      props.setFavoriteCollapse(\"expandFavs\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    //think about where to add the toggle button\r\n    <aside className=\"favorites\">\r\n      <div className=\"hideFavs tableArea\">\r\n        <h2>Favorites</h2>\r\n        <div className=\"favListTable\">\r\n          <table>\r\n            <tr className=\"listHeader\">\r\n              <th className=\"listTitle\">Title</th>\r\n              <th></th>\r\n            </tr>\r\n            <TransitionGroup> \r\n              {props.favorites.map((p) => (\r\n                <CSSTransition\r\n                  key={p.title}\r\n                  timeout={500}\r\n                  classNames=\"fade\">\r\n                  <FavoriteItem\r\n                    play={p}\r\n                    updateFavorites={props.updateFavorites}\r\n                    updateCurrentPlay={props.updateCurrentPlay}\r\n                    updateInfo={props.updateInfo}\r\n                    info={props.info}\r\n                    fetchInfo={props.fetchInfo}\r\n                  />\r\n                </CSSTransition>\r\n              ))}\r\n            </TransitionGroup>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div onClick={updateFavoriteCollapse} className=\"favoriteCollapseButton\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#ffffff\"\r\n        >\r\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n          <path d=\"M10 17l5-5-5-5v10z\" />\r\n        </svg>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport \"../styles/playbrowser.css\";\r\nconst PlayFilters = (props) => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [beforeInput, setBefore] = useState();\r\n  const [afterInput, setAfter] = useState();\r\n  const [genre, setGenre] = useState();\r\n  const [bText, setBText] = useState(\"More Filters >\");\r\n\r\n  const handleClick = () => {\r\n    clicked ? setClicked(false) : setClicked(true);\r\n  };\r\n\r\n  const changeButtonText = () => {\r\n    clicked ? setBText(\"More Filters >\") : setBText(\"Less Filters <\");\r\n  };\r\n\r\n  const filterGenres = () => {\r\n    let genres = props.plays.map((p) => p.genre);\r\n    let filteredGenres = genres.filter(\r\n      (item, index) => genres.indexOf(item) === index\r\n    );\r\n    return filteredGenres.map((p) => (\r\n      <option defaultValue={genre} onClick={handleGenreChange}>\r\n        {p}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const handleBeforeChange = (e) => {\r\n    setBefore(e.target.value);\r\n  };\r\n\r\n  const handleAfterChange = (e) => {\r\n    setAfter(e.target.value);\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    props.updateTitleFilter(e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    setGenre(e.target.value);\r\n  };\r\n\r\n  const passFilters = (e) => {\r\n    e.preventDefault();\r\n    props.saveFilters(props.filterTitle, beforeInput, afterInput, genre);\r\n  };\r\n\r\n  const reseFilters = () => {\r\n    //broken\r\n    props.saveFilters(\"\", \"\", \"\", \"\");\r\n    props.updateTitleFilter(\"\");\r\n    setBefore();\r\n    setAfter();\r\n    setGenre();\r\n  };\r\n\r\n  const moreFilters = () => {\r\n    if (clicked) {\r\n      return (\r\n        <div className=\"clickedForm\">\r\n          <label id=\"label\">Year</label>\r\n\r\n          <div>\r\n            <label id=\"label\">\r\n              {/* <input type=\"radio\" name=\"year\" defaultValue=\"before\" /> */}\r\n              From\r\n              <input\r\n                type=\"text\"\r\n                name=\"before\"\r\n                className=\"inputYear\"\r\n                value={beforeInput}\r\n                onChange={handleBeforeChange}\r\n              />\r\n            </label>\r\n\r\n            <label id=\"label\">Genre</label>\r\n            <select name=\"genre\" onClick={handleGenreChange}>\r\n              <option value=\"\">Select a Genre</option>\r\n              {filterGenres()}\r\n            </select>\r\n            <label id=\"label\" className=\"after\">\r\n              {/* <input type=\"radio\" name=\"year\" value=\"after\" /> */}\r\n              To\r\n              <input\r\n                type=\"text\"\r\n                name=\"after\"\r\n                className=\"inputYear\"\r\n                defaultValue={afterInput}\r\n                onChange={handleAfterChange}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"playFilters\">\r\n      {/* <h2>Play List </h2> */}\r\n\r\n      <form className=\"filter\" onSubmit={passFilters}>\r\n        <div className=\"titleDiv\">\r\n          <label id=\"label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"inputText\"\r\n            defaultValue={props.filterTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n          <div className=\"buttonGroup\">\r\n            <div>\r\n              <button type=\"submit\" className=\"buttonThin\">\r\n                Filter\r\n              </button>\r\n              <button\r\n                onClick={reseFilters}\r\n                value=\"Reset\"\r\n                type=\"reset\"\r\n                className=\"buttonThin\"\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"buttonThin moreFilters\"\r\n              onClick={() => {\r\n                handleClick();\r\n                changeButtonText();\r\n              }}\r\n            >\r\n              {bText}\r\n            </button>\r\n          </div>\r\n          <p className=\"filterResults\">{props.resultStatus}</p>\r\n        </div>\r\n\r\n        {moreFilters()}\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PlayFilters;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Heart(props) {\r\n  const favClicked = () => {\r\n    props.updateFavorites(props.play);\r\n    props.updateHeartClassName();\r\n  };\r\n\r\n  const heartSolid = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#14213dff\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\r\n    </svg>\r\n  );\r\n  const heartOutline = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      fill=\"#2e4b8aff\"\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\" />\r\n    </svg>\r\n  );\r\n\r\n  const checkFavoriteShape = () => {\r\n    if (props.favorites.find((p) => p.id === props.play.id)) {\r\n      return heartSolid;\r\n    } else {\r\n      return heartOutline;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={props.favoriteStatus} onClick={favClicked}>\r\n      {checkFavoriteShape()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Heart;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Heart from \"./Heart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SinglePlay = (props) => {\r\n  // This function is to change the heart logo depending on current favorite state\r\n  const [heartStyle, setHeartStyle] = useState(\"favoriteHeartOutline\");\r\n\r\n  const updateHeartClassName = () => {\r\n    if (heartStyle === \"favoriteHeartOutline\") {\r\n      setHeartStyle(\"favoriteHeartSolid\");\r\n    } else {\r\n      setHeartStyle(\"favoriteHeartOutline\");\r\n    }\r\n  };\r\n\r\n  const handleView = () => {\r\n    props.updateCurrentPlay(props.play);\r\n    props.updateInfo(props.info);\r\n    props.fetchInfo(props.play);\r\n  };\r\n\r\n  return (\r\n    <tr className=\"playItem\">\r\n      <Link to=\"/details\" className=\"titleLink\" onClick={handleView}>\r\n        <td>{props.play.title}</td>\r\n      </Link>\r\n      <td className=\"listItemYear\">{props.play.likelyDate}</td>\r\n      <td>\r\n        <Link to=\"/details\">\r\n          <button className=\"buttonThin\" onClick={handleView}>\r\n            View\r\n          </button>\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        <Heart\r\n          play={props.play}\r\n          updateFavorites={props.updateFavorites}\r\n          favoriteStatus={heartStyle}\r\n          favorites={props.favorites}\r\n          updateHeartClassName={updateHeartClassName}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default SinglePlay;\r\n","export default __webpack_public_path__ + \"static/media/loading.27044e74.gif\";","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../styles/playbrowser.css\";\r\nimport \"../styles/template.css\";\r\nimport SinglePlay from \"./SinglePlay.js\";\r\nimport loadingAnimation from \"../images/loading.gif\";\r\n\r\nconst PlayList = (props) => {\r\n  const defaultHeading = (heading) => {\r\n    return (\r\n      <p>\r\n        <span>{heading}</span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const [titleHeading, setTitleHeading] = useState(defaultHeading(\"Title\"));\r\n  const [dateHeading, setDateHeading] = useState(defaultHeading(\"Year\"));\r\n  const [clickedTitle, setClickedTitle] = useState(0);\r\n  const [clickedDate, setClickedDate] = useState(0);\r\n\r\n  const arrowUp = (heading) => {\r\n    return (\r\n      <p>\r\n        <span>{heading}</span>&#9650;\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const arrowDown = (heading) => {\r\n    return (\r\n      <p>\r\n        <span>{heading}</span>&#11206;\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    setClickedDate(0);\r\n    setDateHeading(defaultHeading(\"Year\"));\r\n    switch (clickedTitle) {\r\n      case 0:\r\n        setClickedTitle(1);\r\n        setTitleHeading(arrowDown(\"Title\"));\r\n        props.sortPlays(1, 0);\r\n        break;\r\n      case 1:\r\n        setClickedTitle(2);\r\n        setTitleHeading(arrowUp(\"Title\"));\r\n        props.sortPlays(2, 0);\r\n        break;\r\n      case 2:\r\n        setClickedTitle(0);\r\n        setTitleHeading(defaultHeading(\"Title\"));\r\n        props.sortPlays(0, 0);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDateClick = () => {\r\n    setClickedTitle(0);\r\n    setTitleHeading(defaultHeading(\"Title\"));\r\n    switch (clickedDate) {\r\n      case 0:\r\n        setClickedDate(1);\r\n        setDateHeading(arrowDown(\"Year\"));\r\n        props.sortPlays(0, 1);\r\n        break;\r\n      case 1:\r\n        setClickedDate(2);\r\n        setDateHeading(arrowUp(\"Year\"));\r\n        props.sortPlays(0, 2);\r\n        break;\r\n      case 2:\r\n        setClickedDate(0);\r\n        setDateHeading(defaultHeading(\"Year\"));\r\n        props.sortPlays(0, 0);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={\"playList\"}>\r\n      <h2>List/Matches</h2>\r\n      <div className={\"is\" + props.loadedDataStatus}>\r\n        <img src={loadingAnimation} className=\"loadingAnimation\" />\r\n      </div>\r\n      <div className={\"playListTable \" + props.loadedDataStatus}>\r\n        <table>\r\n          <tr className=\"listHeader\">\r\n            <th className=\"listTitle\" onClick={handleTitleClick}>\r\n              {titleHeading}\r\n            </th>\r\n            <th className=\"listYear\" onClick={handleDateClick}>\r\n              {dateHeading}\r\n            </th>\r\n            <th className=\"viewbtn\"> </th>\r\n            <th className=\"favbtn\"> </th>\r\n          </tr>\r\n          {props.plays.map((p) => (\r\n            <SinglePlay\r\n              play={p}\r\n              updateCurrentPlay={props.updateCurrentPlay}\r\n              updateFavorites={props.updateFavorites}\r\n              favorites={props.favorites}\r\n              info={props.info}\r\n              updateInfo={props.updateInfo}\r\n              fetchInfo={props.fetchInfo}\r\n            />\r\n          ))}\r\n        </table>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Favorites from \"./Favorites\";\r\nimport PlayFilters from \"./PlayFilters\";\r\nimport PlayList from \"./PlayList\";\r\nimport \"../styles/playbrowser.css\";\r\n\r\nconst PlayBrowser = (props) => {\r\n  return (\r\n    //css and html tags are not set for this im just using it as an example ty and goodbye\r\n    <section className={\"playBrowser \" + props.favoriteCollapse}>\r\n      <Header />\r\n      <Favorites\r\n        updateFavorites={props.updateFavorites}\r\n        favorites={props.favorites}\r\n        plays={props.plays}\r\n        updateCurrentPlay={props.updateCurrentPlay}\r\n        favoriteCollapse={props.favoriteCollapse}\r\n        setFavoriteCollapse={props.setFavoriteCollapse}\r\n        info={props.info}\r\n        updateInfo={props.updateInfo}\r\n      />\r\n      <PlayFilters\r\n        plays={props.plays}\r\n        saveFilters={props.saveFilters}\r\n        filterTitle={props.filterTitle}\r\n        updateTitleFilter={props.updateTitleFilter}\r\n        resultStatus={props.resultStatus}\r\n      />\r\n      <PlayList\r\n        plays={props.plays}\r\n        updateFavorites={props.updateFavorites}\r\n        favorites={props.favorites}\r\n        updateCurrentPlay={props.updateCurrentPlay}\r\n        sortPlays={props.sortPlays}\r\n        info={props.info}\r\n        updateInfo={props.updateInfo}\r\n        loadedDataStatus={props.loadedDataStatus}\r\n        fetchInfo={props.fetchInfo}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PlayBrowser;\r\n","export default __webpack_public_path__ + \"static/media/wikipedia.8685c815.jpg\";","export default __webpack_public_path__ + \"static/media/gutenberg.adf02b7d.jpg\";","export default __webpack_public_path__ + \"static/media/shakespeare.05a2bba5.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport wikipedia from \"../images/wikipedia.jpg\";\r\nimport gutenberg from \"../images/gutenberg.jpg\";\r\nimport shakespeareOrg from \"../images/shakespeare.jpg\";\r\nimport \"../styles/Details.css\";\r\n\r\nconst PlayDetails = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"detailItems\">\r\n        <div className=\"playDetailsTab\">\r\n          <p>Composition: {props.play.likelyDate}</p>\r\n          <p>Genre: {props.play.genre}</p>\r\n          <div className=\"webLinks\">\r\n            <a target=\"_blank\" href={props.play.wiki}>\r\n              <img src={wikipedia} title=\"Wiki\" className=\"webIcon\" />\r\n            </a>\r\n            <a target=\"_blank\" href={props.play.gutenberg}>\r\n              <img src={gutenberg} title=\"Gutenberg\" className=\"webIcon\" />\r\n            </a>\r\n            <a target=\"_blank\" href={props.play.shakespeareOrg}>\r\n              <img\r\n                src={shakespeareOrg}\r\n                title=\"Shakespeare Org\"\r\n                className=\"webIcon\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <p>Description: {props.play.desc}</p>\r\n        </div>\r\n        <div className=\"closeButton\">\r\n          <Link to=\"/browse\">\r\n            <button className=\"button\">Close &#10006;</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayDetails;\r\n","import React from \"react\";\r\nimport \"../styles/Details.css\";\r\n\r\nconst Characters = (props) => {\r\n  return (\r\n    <div className=\"playCharacters\">\r\n      <div className=\"playCharactersTable\">\r\n        <table>\r\n          <tr>\r\n            <th>Character</th>\r\n            <th>Description</th>\r\n          </tr>\r\n          {props.chars.map((p) => {\r\n            return (\r\n              <tr>\r\n                <td>{p.player}</td>\r\n                <td>{p.desc}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport Characters from \"./Characters\";\r\nimport PlayDetails from \"./PlayDetails\";\r\n\r\nconst DisplayPosts = (props) => {\r\n  if (props.fileExists) {\r\n    return (\r\n      <Tabs defaultIndex={0}>\r\n        <TabList>\r\n          <Tab>Details</Tab>\r\n          <Tab>Characters</Tab>\r\n        </TabList>\r\n        <TabList>\r\n          <TabPanel>\r\n            {\" \"}\r\n            <PlayDetails play={props.play} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {\" \"}\r\n            <Characters chars={props.chars} />\r\n          </TabPanel>\r\n        </TabList>\r\n      </Tabs>\r\n    );\r\n  } else {\r\n    return (\r\n      <Tabs defaultIndex={0}>\r\n        <TabList>\r\n          <Tab>Details</Tab>\r\n        </TabList>\r\n        <TabList>\r\n          <TabPanel>\r\n            {\" \"}\r\n            <PlayDetails play={props.play} />\r\n          </TabPanel>\r\n        </TabList>\r\n      </Tabs>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DisplayPosts;\r\n","import React from \"react\";\r\nimport Characters from \"./Characters.js\";\r\nimport DisplayPosts from \"./Tabs\";\r\nimport PlayDetails from \"./PlayDetails\";\r\nimport \"../styles/Details.css\";\r\n\r\nconst DetailsMain = (props) => {\r\n  const file = () => {\r\n    return (\r\n      <button\r\n        className={props.fileExists ? \"button\" : \"button sadbutton\"}\r\n        title={props.fileExists ? \"Read Text\" : \"No Text Available\"}\r\n        onClick={props.fileExists ? props.toggleReadText : null}\r\n      >\r\n        Read&#128214;\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"outer\">\r\n      <div className=\"playDetailsMain tabs\">\r\n        <div className=\"synopsis\">\r\n          <div>\r\n            <h2> Synopsis:</h2>\r\n            <p> {props.play.synopsis}</p>\r\n            {file()}\r\n          </div>\r\n          {/* <button className=\"button\" onClick={props.toggleReadText}>\r\n            Read &#128214;\r\n          </button> */}\r\n        </div>\r\n        <div className=\"detailsAndChar\">\r\n          <DisplayPosts\r\n            chars={props.chars}\r\n            play={props.play}\r\n            fileExists={props.fileExists}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsMain;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TextForm = (props) => {\r\n  const generateActs = () => {\r\n    let acts = props.text.map((n) => n.name);\r\n    return acts.map((n) => (\r\n      <option defaultValue={n} onClick={props.handleActChange}>\r\n        {n}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const generateScenes = () => {\r\n    if (props.actForm) {\r\n      let chosen = props.text.find((t) => props.actForm === t.name);\r\n      let scenes = chosen.scenes.map((n) => n.name);\r\n      return scenes.map((n) => (\r\n        <option defaultValue={n} onClick={props.handleSceneChange}>\r\n          {n}\r\n        </option>\r\n      ));\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const generateCharacters = () => {\r\n    let characters = props.chars.map((n) => n.player);\r\n    return characters.map((n) => (\r\n      <option defaultValue={n} onClick={props.handleCharacterChange}>\r\n        {n}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"formArea\">\r\n        <p>TextForm</p>\r\n\r\n        <form className=\"form\">\r\n          <div className=\"form\">\r\n            <label id=\"act\">Act</label>\r\n            <select name=\"act\" onChange={props.handleActChange}>\r\n              <option value=\"\">Select an Act</option>\r\n              {generateActs()}\r\n            </select>\r\n\r\n            <label id=\"scene\">Scene</label>\r\n            <select name=\"scene\" onChange={props.handleSceneChange}>\r\n              <option value=\"\">Select a Scene</option>\r\n              {generateScenes()}\r\n            </select>\r\n\r\n            <label id=\"character\">Character</label>\r\n            <select name=\"character\" onChange={props.handleCharacterChange}>\r\n              <option value=\"\">Select a Character</option>\r\n              {generateCharacters()}\r\n            </select>\r\n\r\n            <label id=\"searchTerm\">\r\n              <p>Search</p>\r\n              <input\r\n                onChange={props.updateSearch}\r\n                type=\"text\"\r\n                name=\"term\"\r\n                className=\"searchTerm\"\r\n              />\r\n            </label>\r\n          </div>\r\n        </form>\r\n        <button className=\"button\" onClick={props.toggleReadText}>\r\n          Back &#128216;\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\r\nimport \"../styles/DetailsText.css\";\r\nimport \"../styles/DetailsText.css\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst Scene = (props) => {\r\n  const findHighLight = (speech, scene) => {\r\n    if (true) {\r\n      return (\r\n        <Highlighter\r\n          searchWords={props.playSearchWord}\r\n          autoEscape={true}\r\n          textToHighlight={\"\" + speech.lines}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scene\">\r\n      {props.act.scenes.map((s) => {\r\n        if (s.name === props.sceneForm || !props.sceneForm) {\r\n          return (\r\n            <div className=\"subScene\">\r\n              <h2 className=\"sceneName\">\r\n                {s.name} - {s.title}\r\n              </h2>\r\n              <h2 className=\"sceneDirec\">{s.stageDirection}</h2>\r\n              {s.speeches.map((speech) => {\r\n                if (\r\n                  speech.speaker === props.characterForm ||\r\n                  !props.characterForm\r\n                ) {\r\n                  return (\r\n                    <div className=\"sceneLine\">\r\n                      <h3>{speech.speaker}</h3>\r\n                      <p>{findHighLight(speech, s)}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","import React from \"react\";\r\nimport Scene from \"./Scene\";\r\n\r\nconst ScriptText = (props) => {\r\n  let play = props.info;\r\n\r\n  return (\r\n    <section className=\"scriptText\">\r\n      <h1 className=\"playTitle\">{play.title}</h1>\r\n      {play.acts.map((act) => {\r\n        if (act.name === props.actForm || !props.actForm) {\r\n          return (\r\n            <div className=\"act\">\r\n              <h2 className=\"actName\">{act.name}</h2>\r\n              <Scene\r\n                act={act}\r\n                actName={act.name}\r\n                actForm={props.actForm}\r\n                sceneForm={props.sceneForm}\r\n                characterForm={props.characterForm}\r\n                playSearchWord={props.playSearchWord}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ScriptText;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextForm from \"./TextForm\";\r\nimport ScriptText from \"./ScriptText\";\r\nimport \"../styles/DetailsText.css\";\r\n\r\nconst DetailsText = (props) => {\r\n  const [actForm, setActForm] = useState(\"\");\r\n  const [sceneForm, setSceneForm] = useState(\"\");\r\n  const [characterForm, setCharacterForm] = useState(\"\");\r\n  const [playSearchWord, setPlaySearchWord] = useState([\"\"]);\r\n\r\n  const handleActChange = (e) => setActForm(e.target.value);\r\n  const handleSceneChange = (e) => setSceneForm(e.target.value);\r\n  const handleCharacterChange = (e) => setCharacterForm(e.target.value);\r\n\r\n  const updateSearch = (e) => {\r\n    setPlaySearchWord([e.target.value]);\r\n  };\r\n\r\n  return (\r\n    <section className=\"playText\">\r\n      <div className=\"textForm\">\r\n        <TextForm\r\n          toggleReadText={props.toggleReadText}\r\n          text={props.text}\r\n          chars={props.chars}\r\n          actForm={actForm}\r\n          sceneForm={sceneForm}\r\n          characterForm={characterForm}\r\n          updateSearch={updateSearch}\r\n          handleActChange={handleActChange}\r\n          handleSceneChange={handleSceneChange}\r\n          handleCharacterChange={handleCharacterChange}\r\n        />\r\n      </div>\r\n      <div className=\"scriptText\">\r\n        <ScriptText\r\n          play={props}\r\n          info={props.info}\r\n          playSearchWord={playSearchWord}\r\n          actForm={actForm}\r\n          sceneForm={sceneForm}\r\n          characterForm={characterForm}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DetailsText;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"../styles/Details.css\";\r\nimport Favorites from \"./Favorites\";\r\nimport DetailsMain from \"./DetailsMain\";\r\nimport DetailsText from \"./DetailsText\";\r\nimport Heart from \"./Heart\";\r\nimport { update } from \"lodash\";\r\n\r\nconst Details = (props) => {\r\n  const [loadedDetailsStatus, setLoadedDetailsStatus] = useState(false);\r\n\r\n  const [heartStyle, setHeartStyle] = useState(\"favoriteHeartOutline\");\r\n\r\n  const updateHeartClassName = () => {\r\n    if (heartStyle === \"favoriteHeartOutline\") {\r\n      setHeartStyle(\"favoriteHeartSolid\");\r\n    } else {\r\n      setHeartStyle(\"favoriteHeartOutline\");\r\n    }\r\n  };\r\n\r\n  const getStoredPlayDetails = (key, data) => {\r\n    const saved = localStorage.getItem(key);\r\n    const initial = JSON.parse(saved);\r\n    if (initial) {\r\n      props.updateInfo(initial);\r\n    } else {\r\n      localStorage.setItem(key, JSON.stringify(data));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loadedDetailsStatus) {\r\n      let filename = props.play.filename;\r\n      if (filename) {\r\n        props.updateFileExists(true);\r\n        filename = filename.substring(0, filename.lastIndexOf(\".\")); //removes the .json extension in the filename\r\n        const url =\r\n          \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" +\r\n          filename;\r\n\r\n        fetch(url)\r\n          .then((resp) => resp.json())\r\n          .then((data) => {\r\n            props.updateText(data.acts);\r\n            props.updateChars(data.persona);\r\n            props.updateInfo(data);\r\n            getStoredPlayDetails(`play-${data.short}`, data);\r\n          });\r\n      } else {\r\n        props.updateFileExists(false);\r\n      }\r\n      setLoadedDetailsStatus(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClickRead = () => {\r\n    if (!props.readText) {\r\n      return (\r\n        <DetailsMain\r\n          play={props.play}\r\n          chars={props.chars}\r\n          fileExists={props.fileExists}\r\n          toggleReadText={props.toggleReadText}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <DetailsText\r\n          play={props.play}\r\n          toggleReadText={props.toggleReadText}\r\n          chars={props.chars}\r\n          text={props.text}\r\n          info={props.info}\r\n        />\r\n      );\r\n    }\r\n  };\r\nconsole.log(props.play.title);\r\n  return (\r\n\r\n    <section className={\"playDetails \" + props.favoriteCollapse}>\r\n      <Header />\r\n      <section className=\"title\">\r\n        <Heart\r\n          play={props.play}\r\n          updateFavorites={props.updateFavorites}\r\n          favoriteStatus={heartStyle}\r\n          favorites={props.favorites}\r\n          updateHeartClassName={updateHeartClassName}\r\n        />\r\n        <h2>{props.play.title}</h2>\r\n        {console.log(props.play.title)}\r\n      </section>\r\n      <Favorites\r\n        updateFavorites={props.updateFavorites}\r\n        favorites={props.favorites}\r\n        plays={props.plays}\r\n        updateCurrentPlay={props.updateCurrentPlay}\r\n        favoriteCollapse={props.favoriteCollapse}\r\n        setFavoriteCollapse={props.setFavoriteCollapse}\r\n        info={props.info}\r\n        updateInfo={props.updateInfo}\r\n        fetchInfo={props.fetchInfo}\r\n      />\r\n      {handleClickRead()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import logo from \"./logo.svg\";\r\nimport \"./styles/App.css\";\r\nimport Home from \"./components/Home.js\";\r\nimport PlayBrowser from \"./components/PlayBrowser.js\";\r\nimport PlayDetails from \"./components/PlayDetails.js\";\r\nimport Details from \"./components/Details.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Route, Routes, useLocation } from \"react-router-dom\";\r\nimport * as cloneDeep from \"lodash/cloneDeep\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nfunction App() {\r\n  const [loadedDataStatus, setLoadedDataStatus] = useState(\"loading\");\r\n  const [plays, setPlays] = useState(() => {\r\n    const saved = localStorage.getItem(\"plays\");\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || [];\r\n  });\r\n  const [filteredPlays, setFilteredPlays] = useState([]);\r\n  const [sortedPlays, setSortedPlays] = useState([]);\r\n  const [savedFilteredPlays, setSavedFilteredPlays] = useState([]);\r\n  const [favorites, setFavorites] = useState(() => {\r\n    const saved = localStorage.getItem(\"favorites\");\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || [];\r\n  });\r\n  const [filterTitle, setFilterTitle] = useState(\"\");\r\n  const [currentPlay, setCurrentPlay] = useState(() => {\r\n    const saved = localStorage.getItem(\"curPlay\");\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || plays[0];\r\n  });\r\n  const [favoriteCollapse, setFavoriteCollapse] = useState(\"expandFavs\");\r\n  const [resultStatus, setResultStatus] = useState(\"\");\r\n  const [info, setInfo] = useState([]);\r\n  const [fileExists, setFileExists] = useState(false);\r\n  const [readText, setReadText] = useState(false);\r\n\r\n  const [text, setText] = useState([]);\r\n  const [chars, setChars] = useState([]);\r\n\r\n  const updateText = (value) => setText(value);\r\n\r\n  const updateChars = (value) => setChars(value);\r\n\r\n  const toggleReadText = () => {\r\n    if (!readText) {\r\n      setReadText(true);\r\n    } else {\r\n      setReadText(false);\r\n    }\r\n  };\r\n\r\n  const updateFileExists = (state) => {\r\n    setFileExists(state);\r\n  };\r\n\r\n  const fetchInfo = (fetchPlay) => {\r\n    let filename = fetchPlay.filename;\r\n    if (filename) {\r\n      setFileExists(true);\r\n      filename = filename.substring(0, filename.lastIndexOf(\".\")); //removes the .json extension in the filename\r\n      const url =\r\n        \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" +\r\n        filename;\r\n\r\n      fetch(url)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setText(data.acts);\r\n\r\n          setChars(data.persona);\r\n\r\n          setInfo(data);\r\n        });\r\n    } else {\r\n      setReadText(false);\r\n      setFileExists(false);\r\n    }\r\n  };\r\n\r\n  const updateInfo = (info) => {\r\n    setInfo(info);\r\n    setText(info.acts);\r\n    setChars(info.persona);\r\n  };\r\n\r\n  const updateCurrentPlay = (play) => {\r\n    setCurrentPlay(play);\r\n    fetchInfo(play);\r\n    localStorage.setItem(\"curPlay\", JSON.stringify(play));\r\n  };\r\n\r\n  const updateFavorites = (fav) => {\r\n    const copyFavs = cloneDeep(favorites);\r\n    const favorite = copyFavs.find((p) => p.id === fav.id);\r\n    if (!favorite) {\r\n      copyFavs.push(fav);\r\n      console.log(\"added!\");\r\n    } else {\r\n      const index = copyFavs.indexOf(favorite);\r\n      copyFavs.splice(index, 1);\r\n      console.log(\"removed!\");\r\n    }\r\n    setFavorites(copyFavs);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(copyFavs));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedDataStatus === \"loading\") {\r\n      setLoadedDataStatus(\"loading\");\r\n      const url =\r\n        \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\r\n      fetch(url)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setPlays(data);\r\n          localStorage.setItem(\"plays\", JSON.stringify(data));\r\n          setFilteredPlays(data);\r\n          setSortedPlays(data);\r\n          setSavedFilteredPlays(data);\r\n          setLoadedDataStatus(\"\");\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  }, []);\r\n\r\n  const saveFilters = (title, beforeInput, afterInput, genre) => {\r\n    let playsCopy = [...plays];\r\n    if (title) {\r\n      playsCopy = playsCopy.filter((p) =>\r\n        p.title.toLowerCase().includes(title.toLowerCase())\r\n      );\r\n      setFilterTitle(title);\r\n    }\r\n    if (beforeInput) {\r\n      playsCopy = playsCopy.filter((p) => p.likelyDate >= beforeInput);\r\n    }\r\n    if (afterInput) {\r\n      playsCopy = playsCopy.filter((p) => p.likelyDate <= afterInput);\r\n    }\r\n    if (genre) {\r\n      playsCopy = playsCopy.filter((p) => p.genre === genre);\r\n    }\r\n    setFilteredPlays(playsCopy);\r\n    setSortedPlays(playsCopy);\r\n    setSavedFilteredPlays(playsCopy);\r\n    if (playsCopy.length > 0) {\r\n      playsCopy.length === 1\r\n        ? setResultStatus(`${playsCopy.length} Result`)\r\n        : setResultStatus(`${playsCopy.length} Results`);\r\n    } else {\r\n      setResultStatus(\"No Results Found\");\r\n    }\r\n  };\r\n\r\n  const sortPlays = (titleSort, dateSort) => {\r\n    let copySortedPlays = [...sortedPlays];\r\n    if (titleSort > 0) {\r\n      copySortedPlays.sort((a, b) => {\r\n        if (titleSort === 1) {\r\n          if (a.title > b.title) return 1;\r\n          else return -1;\r\n        } else if (titleSort === 2) {\r\n          if (a.title < b.title) return 1;\r\n          else return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    } else if (dateSort > 0) {\r\n      copySortedPlays.sort((a, b) => {\r\n        if (dateSort === 1) {\r\n          if (a.likelyDate > b.likelyDate) return 1;\r\n          else return -1;\r\n        } else if (dateSort === 2) {\r\n          if (a.likelyDate < b.likelyDate) return 1;\r\n          else return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    } else {\r\n      copySortedPlays = [...savedFilteredPlays];\r\n    }\r\n    setFilteredPlays(copySortedPlays);\r\n  };\r\n\r\n  const location = useLocation();\r\n  console.log(\"location\", location);\r\n\r\n  return (\r\n    // <TransitionGroup>\r\n    //   <CSSTransition key={location.key} timeout={300} classNames=\"fade\"> - We spent so much time on this part and it broke it completely. \r\n    // We really really tried here. This is the reason why our assignment is late.\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <Home\r\n                plays={filteredPlays}\r\n                favorites={favorites}\r\n                saveFilters={saveFilters}\r\n                updateFavorites={updateFavorites}\r\n                filterTitle={filterTitle}\r\n                updateTitleFilter={setFilterTitle}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/browse\"\r\n            element={\r\n              <PlayBrowser\r\n                plays={filteredPlays}\r\n                favorites={favorites}\r\n                saveFilters={saveFilters}\r\n                updateFavorites={updateFavorites}\r\n                filterTitle={filterTitle}\r\n                updateTitleFilter={setFilterTitle}\r\n                updateCurrentPlay={updateCurrentPlay}\r\n                sortPlays={sortPlays}\r\n                favoriteCollapse={favoriteCollapse}\r\n                setFavoriteCollapse={setFavoriteCollapse}\r\n                resultStatus={resultStatus}\r\n                info={info}\r\n                updateInfo={updateInfo}\r\n                fetchInfo={fetchInfo}\r\n                loadedDataStatus={loadedDataStatus}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/details\"\r\n            element={\r\n              <Details\r\n                plays={filteredPlays}\r\n                favorites={favorites}\r\n                updateFavorites={updateFavorites}\r\n                updateCurrentPlay={updateCurrentPlay}\r\n                play={currentPlay}\r\n                favoriteCollapse={favoriteCollapse}\r\n                setFavoriteCollapse={setFavoriteCollapse}\r\n                info={info}\r\n                updateInfo={updateInfo}\r\n                fetchInfo={fetchInfo}\r\n                fileExists={fileExists}\r\n                updateFileExists={updateFileExists}\r\n                readText={readText}\r\n                toggleReadText={toggleReadText}\r\n                text={text}\r\n                chars={chars}\r\n                updateText={updateText}\r\n                updateChars={updateChars}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n    //   </CSSTransition>\r\n    // </TransitionGroup>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/Home.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}